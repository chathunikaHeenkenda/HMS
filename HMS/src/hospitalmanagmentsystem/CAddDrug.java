/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospitalmanagmentsystem;

import java.awt.Graphics;
import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Chathunika Heenkenda
 */
public class CAddDrug extends javax.swing.JFrame {
    
    Boolean result;
    Connection con1;
    PreparedStatement insert, delete, update, presc;
   

    /**
     * Creates new form CAddDrug
     */
    public CAddDrug() {
        initComponents();
        setImg();
        
    }
    
    public void setImg(){
        ImageIcon imageicon = new ImageIcon("C:\\Users\\Chathunika Heenkenda\\Desktop\\ITP Project\\Main Project\\interfaces\\HospitalManagmentSystem\\src\\images\\icon.png");
        Image img = imageicon.getImage();
        Image imgScale = img.getScaledInstance(backg.getWidth(),backg.getHeight(),Image.SCALE_FAST);
        
        ImageIcon scaledIcon = new ImageIcon(imgScale);
        backg.setIcon(scaledIcon);
    
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel(){
            public void paintComponent(Graphics g){

                ImageIcon im = new ImageIcon("C:\\Users\\Chathunika Heenkenda\\Desktop\\ITP Project\\Main Project\\interfaces\\HospitalManagmentSystem\\src\\images\\backg1.jpg");
                Image i =im.getImage();

                g.drawImage(i,0,0,this.getSize().width,this.getSize().height,this);

            }
        };
        backg = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        bno = new javax.swing.JLabel();
        drugname = new javax.swing.JTextField();
        miligram = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        qty = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Docname = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        drugtable = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        did = new javax.swing.JLabel();
        Dname = new javax.swing.JLabel();
        price = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        Qty = new javax.swing.JLabel();
        Oid = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Add Drug"));

        jButton1.setBackground(new java.awt.Color(0, 102, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Bill Number");

        bno.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        drugname.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        miligram.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Drug ID");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("Drug Name");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setText("Quantity");

        qty.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setText("Price");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel7.setText("Doctor Name");

        Docname.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Docname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DocnameActionPerformed(evt);
            }
        });
        Docname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                DocnameKeyReleased(evt);
            }
        });

        drugtable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        drugtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Drug ID", "Drug Name", "Quantity", "Price", "Miligrams", "Pescription"
            }
        ));
        drugtable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                drugtableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(drugtable);

        jButton2.setBackground(new java.awt.Color(0, 102, 102));
        jButton2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton2.setText("Add");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 51, 102));
        jButton3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton3.setText("View Bill");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 51, 102));
        jButton4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton4.setText("Cancel");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        did.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        did.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Dname.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Dname.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        price.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        price.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton5.setText("Clear");
        jButton5.setActionCommand("");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Drug Name");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Miligrams");

        Qty.setForeground(new java.awt.Color(153, 204, 255));

        Oid.setForeground(new java.awt.Color(153, 204, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bno, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(251, 251, 251)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(miligram, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(68, 68, 68)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(drugname, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(159, 159, 159)
                                .addComponent(Qty, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(66, 66, 66)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(89, 89, 89)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(109, 109, 109)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Docname, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                    .addComponent(qty)
                                    .addComponent(did, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Dname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(price, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(64, 64, 64)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 726, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(24, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addContainerGap(1117, Short.MAX_VALUE)
                    .addComponent(Oid, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(310, 310, 310)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bno, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(drugname, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Qty, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(did, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                            .addComponent(Dname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                            .addComponent(price, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(qty, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Docname, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(84, 84, 84)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(miligram, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(55, 55, 55)
                    .addComponent(Oid, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(545, Short.MAX_VALUE)))
        );

        jButton6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton6.setText("Log out");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(410, 410, 410)
                .addComponent(backg, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backg, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        MainUI nd = new MainUI();
        nd.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        drugname.setText(null);
        miligram.setText(null);
        did.setText(null);
        Dname.setText(null);
        qty.setText(null);
        price.setText(null);
        Docname.setText(null);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        try{
            Class.forName("com.mysql.jdbc.Driver");
            con1=DriverManager.getConnection("jdbc:mysql://localhost/hms","root","");
            String billno = bno.getText();

            delete = con1.prepareStatement("delete from pharmacydrug where Bill_No = ?");
            delete.setString(1, billno);

            delete.executeUpdate();

            delete = con1.prepareStatement("delete from pharmacybill where Bill_No = ?");
            delete.setString(1, billno);

            delete.executeUpdate();

            JOptionPane.showMessageDialog(this, "Bill Canceled");
        }
        catch (ClassNotFoundException ex) {
            Logger.getLogger(NDrugDetails.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch (SQLException ex) {
            Logger.getLogger(NDrugDetails.class.getName()).log(Level.SEVERE, null, ex);
        }
        CMainMain nd = new CMainMain();
        nd.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        CBill nd = new CBill();
        nd.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String DrugName = drugname.getText();
        String mgs = miligram.getText();
        String Did = did.getText();
        String dname = Dname.getText();
        String quantity = qty.getText();
        String prices = price.getText();
        String docname = Docname.getText();
        String oid = null;
        String pres = null;

        try{
            //Int Userid;
            Class.forName("com.mysql.jdbc.Driver");
            con1=DriverManager.getConnection("jdbc:mysql://localhost/hms","root","");

            presc = con1.prepareStatement("select * from drug, order1 where drug.DrugId = order1.DrugID AND Name = ? AND Mgs =?");

            presc.setString(1,DrugName);
            presc.setString(2,mgs);
            ResultSet rsp = presc.executeQuery();

            while(rsp.next()){
                pres = rsp.getString("Prescription");
            }

            if(pres == "1"){
                if(Did.equals("") || dname.equals("") || quantity.equals("") || prices.equals("") || docname.equals("")){
                    JOptionPane.showMessageDialog(this,"Please enter drug details!");
                }
                else{
                    String PATTERN = "^[a-zA-Z]{0,30}$";
                    Pattern patt = Pattern.compile(PATTERN);
                    Matcher match;
                    match = patt.matcher(Docname.getText());
                    if(!match.matches()){
                        JOptionPane.showMessageDialog(this,"Please enter letters!");
                    }
                    else{
                        String PATTERN1 = "^[0-9]{0,9}$";
                        Pattern patt1 = Pattern.compile(PATTERN1);
                        Matcher match1;
                        match1 = patt1.matcher(qty.getText());

                        if(!match1.matches()){
                            JOptionPane.showMessageDialog(this,"Please enter numbers!");
                        }

                        else{
                            DefaultTableModel df = (DefaultTableModel) drugtable.getModel();
                            int selectedIndex = drugtable.getSelectedRow();

                            int tqty = Integer.parseInt(df.getValueAt(selectedIndex, 2).toString());
                            int iqty = Integer.parseInt(qty.getText());

                            if(tqty < iqty){
                                JOptionPane.showMessageDialog(this,"Quantity limit is exceeded! \nPlease enter a Quantity less than " + tqty);
                            }

                            else{
                                insert = con1.prepareStatement("select Bill_No from pharmacybill group by Bill_No order by Bill_No desc limit 1");

                                ResultSet rs = insert.executeQuery();

                                while(rs.next()){

                                    bno.setText(rs.getString("Bill_No"));
                                }

                                insert = con1.prepareStatement("Select 1 from pharmacydrug where Bill_No = ? AND DrugId = ?");
                                insert.setString(1, bno.getText());
                                insert.setString(2, did.getText());

                                ResultSet r = insert.executeQuery();

                                int a = 0;

                                while(r.next()){
                                    a = r.getInt("1");
                                }
                                if(a == 1){
                                    JOptionPane.showMessageDialog(this,"Drug is already added to the bill!");
                                }
                                else{
                                    insert = con1.prepareStatement("insert into pharmacydrug(Bill_No, DrugId, Quantity, DoctorName, Price) values(?,?,?,?,?)");

                                    insert.setString(1, bno.getText());
                                    insert.setString(2, did.getText());
                                    insert.setString(3, qty.getText());
                                    insert.setString(4, Docname.getText());
                                    insert.setString(5, price.getText());

                                    insert.executeUpdate();

                                    JOptionPane.showMessageDialog(this, "Drug Added");

                                    double totqty = Double.parseDouble(Qty.getText()) - Double.parseDouble(qty.getText());

                                    System.out.println(totqty);

                                    String num1="";
                                    num1+=totqty;

                                    System.out.println(num1);
                                    //System.out.println(Oid.getText());
                                    //totprice.setText(num);

                                    if(totqty == 0)
                                    {
                                        delete = con1.prepareStatement("Update order1 set QtyLeft = ?, Available = 0 where StockID = ? AND DrugID = ?");

                                        delete.setString(1, num1);
                                        delete.setString(2, Oid.getText());
                                        delete.setString(3, did.getText());
                                        delete.executeUpdate();
                                    }
                                    else
                                    {
                                        update = con1.prepareStatement("Update order1 set QtyLeft = ? where StockID = ? AND DrugID = ?");

                                        update.setString(1, num1);
                                        update.setString(2, Oid.getText());
                                        update.setString(3, did.getText());
                                        update.executeUpdate();
                                    }
                                }
                            }
                        }
                    }
                }

            }

            else{
                if(Did.equals("") || dname.equals("") || quantity.equals("") || prices.equals("")){
                    JOptionPane.showMessageDialog(this,"Please enter drug details!");
                }
                else{
                    String PATTERN1 = "^[0-9]{0,9}$";
                    Pattern patt1 = Pattern.compile(PATTERN1);
                    Matcher match1;
                    match1 = patt1.matcher(qty.getText());

                    if(!match1.matches()){
                        JOptionPane.showMessageDialog(this,"Please enter numbers!");
                    }

                    else{
                        DefaultTableModel df = (DefaultTableModel) drugtable.getModel();
                        int selectedIndex = drugtable.getSelectedRow();

                        int tqty = Integer.parseInt(df.getValueAt(selectedIndex, 2).toString());
                        int iqty = Integer.parseInt(qty.getText());

                        if(tqty < iqty){
                            JOptionPane.showMessageDialog(this,"Quantity limit is exceeded! \nPlease enter a Quantity less than " + tqty);
                        }

                        else{
                            insert = con1.prepareStatement("select Bill_No from pharmacybill group by Bill_No order by Bill_No desc limit 1");

                            ResultSet rs = insert.executeQuery();

                            while(rs.next()){

                                bno.setText(rs.getString("Bill_No"));
                            }

                            insert = con1.prepareStatement("Select 1 from pharmacydrug where Bill_No = ? AND DrugId = ?");
                            insert.setString(1, bno.getText());
                            insert.setString(2, did.getText());

                            ResultSet r = insert.executeQuery();

                            int a = 0;

                            while(r.next()){
                                a = r.getInt("1");
                            }
                            if(a == 1){
                                JOptionPane.showMessageDialog(this,"Drug is already added to the bill!");
                            }
                            else{
                                insert = con1.prepareStatement("insert into pharmacydrug(Bill_No, DrugId, Quantity, DoctorName, Price) values(?,?,?,?,?)");

                                insert.setString(1, bno.getText());
                                insert.setString(2, did.getText());
                                insert.setString(3, qty.getText());
                                insert.setString(4, "NULL");
                                insert.setString(5, price.getText());

                                insert.executeUpdate();

                                JOptionPane.showMessageDialog(this, "Drug Added");

                                double totqty = Double.parseDouble(Qty.getText()) - Double.parseDouble(qty.getText());

                                System.out.println(totqty);

                                String num1="";
                                num1+=totqty;

                                System.out.println(num1);
                                //System.out.println(Oid.getText());
                                //totprice.setText(num);

                                if(totqty == 0)
                                {
                                    delete = con1.prepareStatement("Update order1 set QtyLeft = ?, Available = 0 where StockID = ? AND DrugID = ?");

                                    delete.setString(1, num1);
                                    delete.setString(2, Oid.getText());
                                    delete.setString(3, did.getText());
                                    delete.executeUpdate();
                                }
                                else
                                {
                                    update = con1.prepareStatement("Update order1 set QtyLeft = ? where StockID = ? AND DrugID = ?");

                                    update.setString(1, num1);
                                    update.setString(2, Oid.getText());
                                    update.setString(3, did.getText());
                                    update.executeUpdate();
                                }
                            }
                        }
                    }
                }
            }
        }
        catch (ClassNotFoundException ex) {
            //JOptionPane.showMessageDialog(this, "Cant insert ");
            Logger.getLogger(CMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch (SQLException ex) {
            Logger.getLogger(CMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void drugtableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drugtableMouseClicked
        // TODO add your handling code here:

        DefaultTableModel df = (DefaultTableModel) drugtable.getModel();
        int selectedIndex = drugtable.getSelectedRow();

        did.setText(df.getValueAt(selectedIndex, 0).toString());
        Dname.setText(df.getValueAt(selectedIndex, 1).toString());
        price.setText(df.getValueAt(selectedIndex, 3).toString());

        String pres = df.getValueAt(selectedIndex, 5).toString();

        if("0".equals(pres)){
            Docname.setEditable(false);
        }
        else{
            Docname.setEditable(true);
        }

    }//GEN-LAST:event_drugtableMouseClicked

    private void DocnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DocnameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_DocnameKeyReleased

    private void DocnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DocnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DocnameActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String DrugName = drugname.getText();
        String mgs = miligram.getText();
        int c;

        if(DrugName.equals("") || mgs.equals(""))
        {
            JOptionPane.showMessageDialog(this, "Please enter search details");
        }

        else{
            String PATTERN1 = "^[0-9]{0,9}$";
            Pattern patt1 = Pattern.compile(PATTERN1);
            Matcher match1;
            match1 = patt1.matcher(miligram.getText());

            if(!match1.matches()){
                JOptionPane.showMessageDialog(this,"Please enter numbers!");
            }

            else{
                try{
                    Class.forName("com.mysql.jdbc.Driver");
                    con1 = DriverManager.getConnection("jdbc:mysql://localhost/hms","root","");

                    insert = con1.prepareStatement("select Bill_No as id from pharmacybill group by Bill_No order by Bill_No desc limit 1");

                    ResultSet rs1 = insert.executeQuery();

                    while(rs1.next()){

                        bno.setText(rs1.getString("id"));
                    }

                    insert = con1.prepareStatement("select * from drug, order1 where drug.DrugId = order1.DrugID AND Name = ? AND Mgs =?");

                    insert.setString(1,DrugName);
                    insert.setString(2,mgs);
                    ResultSet rs = insert.executeQuery();
                    ResultSetMetaData res = rs.getMetaData();
                    c = res.getColumnCount();
                    DefaultTableModel df = (DefaultTableModel) drugtable.getModel();
                    df.setRowCount(0);

                    while(rs.next())
                    {
                        int da = Integer.parseInt(rs.getString("drug.Available"));
                        int sa = Integer.parseInt(rs.getString("order1.Available"));
                        if(da == 0){
                            JOptionPane.showMessageDialog(this,"Drug is not in the system");
                        }
                        else if(da == 0 && sa == 0)
                        {
                            JOptionPane.showMessageDialog(this,"Drug is out of stock!");
                        }
                        else{
                            if(sa == 1){
                                Oid.setText(rs.getString("StockID"));
                                Qty.setText(rs.getString("QtyLeft"));
                                Vector v2=new Vector();
                                for(int a=1;a<=c;a++)
                                {
                                    v2.add(rs.getString("DrugId"));
                                    v2.add(rs.getString("Name"));
                                    v2.add(rs.getString("QtyLeft"));
                                    v2.add(rs.getString("PriceTo"));
                                    v2.add(rs.getString("Mgs"));
                                    v2.add(rs.getString("Prescription"));
                                }
                                df.addRow(v2);
                            }
                            else{
                                JOptionPane.showMessageDialog(this,"Drug is out of stock!");
                            }
                        }
                    }
                }
                catch (ClassNotFoundException ex) {
                    Logger.getLogger(CAddDrug.class.getName()).log(Level.SEVERE, null, ex);
                }
                catch (SQLException ex) {
                    Logger.getLogger(CAddDrug.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CAddDrug.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CAddDrug.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CAddDrug.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CAddDrug.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CAddDrug().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Dname;
    private javax.swing.JTextField Docname;
    private javax.swing.JLabel Oid;
    private javax.swing.JLabel Qty;
    private javax.swing.JLabel backg;
    private javax.swing.JLabel bno;
    private javax.swing.JLabel did;
    private javax.swing.JTextField drugname;
    private javax.swing.JTable drugtable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField miligram;
    private javax.swing.JLabel price;
    private javax.swing.JTextField qty;
    // End of variables declaration//GEN-END:variables
}
