/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospitalmanagmentsystem;

import java.awt.Graphics;
import java.awt.Image;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Chathunika Heenkenda
 */
public class ShDoctor extends javax.swing.JFrame {
    
    Boolean result;
    Connection con1;
    PreparedStatement insert, delete, update;

    /**
     * Creates new form ShDoctor
     */
    public ShDoctor() {
        initComponents();
        setImg();
        table_update();
    }
    
    public void setImg(){
        ImageIcon imageicon = new ImageIcon("C:\\Users\\Chathunika Heenkenda\\Desktop\\ITP Project\\Main Project\\interfaces\\HospitalManagmentSystem\\src\\images\\icon.png");
        Image img = imageicon.getImage();
        Image imgScale = img.getScaledInstance(backg.getWidth(),backg.getHeight(),Image.SCALE_FAST);
        ImageIcon scaledIcon = new ImageIcon(imgScale);
        backg.setIcon(scaledIcon);   	

    }
    
    public void table_update(){
    
        try {
               Class.forName("com.mysql.jdbc.Driver");
                con1=DriverManager.getConnection("jdbc:mysql://localhost/hms","root","");
               
                insert = con1.prepareStatement("SELECT DoctorName,Speciality,DoctorId,DoctorIDValid,email,DateTime,RoomNo,Address FROM doctor");
                
                ResultSet rs = insert.executeQuery();
             
               
                ResultSetMetaData res = rs.getMetaData();
                int c= res.getColumnCount();

                 DefaultTableModel df = (DefaultTableModel) jTable1.getModel();
                df.setRowCount(0);

                while(rs.next()){

                    Vector v2 = new Vector ();
                    for (int a=1;a<=c;a++){

                        v2.add(rs.getString("DoctorId"));
                        v2.add(rs.getString("DoctorName"));
                        v2.add(rs.getString("Speciality"));
                        v2.add(rs.getString("DoctorIDValid"));
                        v2.add(rs.getString("RoomNo"));
                        v2.add(rs.getString("Address"));
                        v2.add(rs.getString("email"));


                    }
                 df.addRow(v2);
                }
              
           } catch (SQLException ex) {
               Logger.getLogger(ShDoctor.class.getName()).log(Level.SEVERE, null, ex);
           } catch (ClassNotFoundException ex) {
               Logger.getLogger(ShDoctor.class.getName()).log(Level.SEVERE, null, ex);
           }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel(){
            public void paintComponent(Graphics g){

                ImageIcon im = new ImageIcon("C:\\Users\\Chathunika Heenkenda\\Desktop\\ITP Project\\Main Project\\interfaces\\HospitalManagmentSystem\\src\\images\\backg1.jpg");
                Image i =im.getImage();

                g.drawImage(i,0,0,this.getSize().width,this.getSize().height,this);

            }

        };
        jLabel8 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtDoctorId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtDoctorName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtRoomNo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        udoc = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        backg = new javax.swing.JLabel();
        txtValidPeriod = new com.toedter.calendar.JCalendar();
        txtDoctorSpecility = new javax.swing.JComboBox<>();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("ADD NEW DOCTOR");

        jLabel5.setText("Doctor License:");

        jLabel3.setText("Doctor Name:");

        jLabel4.setText("Doctor Specility:");

        jLabel6.setText(" ID Valid Period:");

        jLabel7.setText("Email:");

        jLabel2.setText("Room No:");

        jLabel1.setText("Address:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Dr.License", "Dr.name", "Speciality", "ID Valid period", "Room No", "Address", "Email"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton2.setText("Add");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("Edit");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton1.setText("Delete");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        udoc.setText("Update doctor Details");
        udoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                udocActionPerformed(evt);
            }
        });

        jButton3.setText("Report");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        txtDoctorSpecility.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "neurologist", "cardiologist", "physician", "psychiatrist" }));

        jButton5.setText("clear");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton7.setText("Log out");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton6.setText("Back");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(285, 285, 285)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(udoc, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel1))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtRoomNo, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(txtValidPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jLabel7)
                                .addGap(22, 22, 22)
                                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(12, 12, 12)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtDoctorName)
                                    .addComponent(txtDoctorSpecility, 0, 220, Short.MAX_VALUE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(txtDoctorId, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(59, 59, 59)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 857, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(130, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(480, 480, 480)
                .addComponent(backg, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backg, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(udoc, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDoctorId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtDoctorSpecility, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(txtValidPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel7))
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtRoomNo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addComponent(jButton5)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

            int selectedRow=jTable1.getSelectedRow();
            DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
            txtDoctorId.setText(model.getValueAt(selectedRow, 0).toString());
            txtDoctorName.setText(model.getValueAt(selectedRow, 1).toString());
            //txtDoctorSpecility.setText(model.getValueAt(selectedRow,2).toString());//
           DateFormat simpleDateFormat=new SimpleDateFormat("yyyy-MM-dd");
            java.util.Date dutyDay;
           try {
               dutyDay = (java.util.Date) simpleDateFormat.parse(model.getValueAt(selectedRow, 3).toString());
               txtValidPeriod.setDate((dutyDay));
           } catch (ParseException ex) {
               Logger.getLogger(ShDoctor.class.getName()).log(Level.SEVERE, null, ex);
           }
            txtRoomNo.setText(model.getValueAt(selectedRow, 4).toString());
            txtAddress.setText(model.getValueAt(selectedRow, 5).toString());
             txtEmail.setText(model.getValueAt(selectedRow, 6).toString());

        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String dname=txtDoctorName.getText();
        String dspecialty =txtDoctorSpecility.getSelectedItem().toString();
        String did =txtDoctorId.getText();
        DateFormat fmt = new SimpleDateFormat("dd/MM/yyyy");
        Date dtime = new Date(txtValidPeriod.getDate().getTime());
        String demail =txtEmail.getText();
        int dRoomNo=Integer.parseInt(txtRoomNo.getText().toString());
        String daddress=txtAddress.getText();
        
        try{
            //Int Userid;

            Class.forName("com.mysql.jdbc.Driver");
            con1=DriverManager.getConnection("jdbc:mysql://localhost/hms","root","");
            if(dspecialty.equals("") || dname.equals("") || did.equals("") || dtime.equals("") || demail.equals("") || txtRoomNo.getText().equals("") || daddress.equals("")){
                JOptionPane.showMessageDialog(this,"Please enter doctor details!");
            }
            else{
                String PATTERN = "^[a-zA-Z]{0,30}$";
                Pattern patt = Pattern.compile(PATTERN);
                Matcher match;
                match = patt.matcher(txtDoctorName.getText());
                if(!match.matches()){
                    JOptionPane.showMessageDialog(this,"Please enter letters!");
                }
                else{
                    String PATTERN1 = "^[0-9]{0,9}$";
                    Pattern patt1 = Pattern.compile(PATTERN1);
                    Matcher match1;
                    match1 = patt1.matcher(txtRoomNo.getText());

                    if(!match1.matches()){
                        JOptionPane.showMessageDialog(this,"Please enter numbers!");
                    }

                    else{
                            String PATTERN2 = "^[a-zA-Z0-9]{0,30}[@][a-zA-Z0-9]{0,10}[.][a-zA-Z]{0,5}$";
                            Pattern patt2 = Pattern.compile(PATTERN);
                            Matcher match2;
                            match2 = patt2.matcher(txtEmail.getText());
                            if(!match.matches()){
                            JOptionPane.showMessageDialog(null, "Enter Valid Email");
                            }
                            else{
                            
                                insert = con1.prepareStatement("Select 1 from doctor where email = ?");
                                insert.setString(1, txtEmail.getText());
                                
                                ResultSet r = insert.executeQuery();

                                int a = 0;

                                while(r.next()){
                                    a = r.getInt("1");
                                }
                                if(a == 1){
                                    JOptionPane.showMessageDialog(this,"E-mail alredy exists!");
                                }
                                else{
                                    insert = con1.prepareStatement("Select 1 from doctor where DoctorId = ?");
                                    insert.setString(1, did);

                                    ResultSet r1 = insert.executeQuery();

                                    int a1 = 0;

                                    while(r.next()){
                                        a1 = r1.getInt("1");
                                    }
                                    if(a1 == 1){
                                        JOptionPane.showMessageDialog(this,"Doctor License alredy exists!");
                                    }
                                    else{
                                        insert = con1.prepareStatement("insert into doctor(DoctorName,Speciality,DoctorId,DoctorIDValid,email,RoomNo,Address)values(?,?,?,?,?,?,?)");

                                        insert.setString( 1, dname);  
                                        insert.setString( 2, dspecialty ); 
                                        insert.setString( 3, did ); 
                                        insert.setDate( 4, dtime ); 

                                        insert.setString( 5, demail );  
                                        insert.setInt(6, dRoomNo );  
                                        insert.setString( 7, daddress );

                                        insert.executeUpdate();

                                        JOptionPane.showMessageDialog(this, "Doctor Added");
                                        table_update();
                                    }
                            }
                        }
                    }
                }
            }
        } 
        catch (ClassNotFoundException ex) {
            //JOptionPane.showMessageDialog(this, "Cant insert ");
            Logger.getLogger(ShDoctor.class.getName()).log(Level.SEVERE, null, ex);
        } 
        catch (SQLException ex) {
            Logger.getLogger(ShDoctor.class.getName()).log(Level.SEVERE, null, ex);
        }
                            
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        try {
            if(txtDoctorName.getText().equals("") || txtEmail.getText().equals("") || txtRoomNo.getText().equals("") || txtDoctorId.getText().equals("") || txtRoomNo.getText().equals("")){
                JOptionPane.showMessageDialog(this,"Please select the doctor to update!");
            }
            else{
                String PATTERN = "^[a-zA-Z]{0,30}$";
                Pattern patt = Pattern.compile(PATTERN);
                Matcher match;
                match = patt.matcher(txtDoctorName.getText());
                if(!match.matches()){
                    JOptionPane.showMessageDialog(this,"Please enter letters!");
                }
                else{
                    String PATTERN1 = "^[0-9]{0,9}$";
                    Pattern patt1 = Pattern.compile(PATTERN1);
                    Matcher match1;
                    match1 = patt1.matcher(txtRoomNo.getText());

                    if(!match1.matches()){
                        JOptionPane.showMessageDialog(this,"Please enter numbers!");
                    }

                    else{
                            String PATTERN2 = "^[a-zA-Z0-9]{0,30}[@][a-zA-Z0-9]{0,10}[.][a-zA-Z]{0,5}$";
                            Pattern patt2 = Pattern.compile(PATTERN);
                            Matcher match2;
                            match2 = patt2.matcher(txtEmail.getText());
                            if(!match.matches()){
                            JOptionPane.showMessageDialog(null, "Enter Valid Email");
                            }
                            else{
                                    Class.forName("com.mysql.jdbc.Driver");
                                    con1=DriverManager.getConnection("jdbc:mysql://localhost/hms","root","");


                                    update =   con1.prepareStatement("update doctor set DoctorName=?,email=?,RoomNo=?,Address=? where DoctorId=?");
                                    update.setString(1,txtDoctorName.getText());
                                    //updatePs.setString(2,txtDoctorSpecility.getText());

                                    update.setString(2,txtEmail.getText());
                                    update.setString(3,txtRoomNo.getText());
                                    update.setString(4,txtAddress.getText());
                                    update.setString(5,txtDoctorId.getText());
                                    update.executeUpdate();
                                    JOptionPane.showMessageDialog(null, "Update sucessfull");
                                    table_update();
                            }
                    }
                }
            }
               
               // TODO add your handling code here:
           } 
        catch (SQLException ex) {
               Logger.getLogger(ShDoctor.class.getName()).log(Level.SEVERE, null, ex);
           } 
        catch (ClassNotFoundException ex) {
                 Logger.getLogger(ShDoctor.class.getName()).log(Level.SEVERE, null, ex);
           }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            if(txtDoctorName.getText().equals("") || txtEmail.getText().equals("") || txtRoomNo.getText().equals("") || txtDoctorId.getText().equals("") || txtRoomNo.getText().equals("")){
                JOptionPane.showMessageDialog(this,"Please select the doctor to delete!");
            }
            else{
                Class.forName("com.mysql.jdbc.Driver");
                                    con1=DriverManager.getConnection("jdbc:mysql://localhost/hms","root","");

                                    delete =con1.prepareStatement("delete from doctor where DoctorId=?");
                                    delete.setString(1,txtDoctorId.getText());
                                    delete.executeUpdate();
                                    JOptionPane.showMessageDialog(null, "Sucessfully deleted");
                                    table_update();
            }
               // TODO add your handling code here:
           } 
        catch (SQLException ex) {
               Logger.getLogger(ShDoctor.class.getName()).log(Level.SEVERE, null, ex);
           } 
        catch (ClassNotFoundException ex) {
                 Logger.getLogger(ShDoctor.class.getName()).log(Level.SEVERE, null, ex);
           }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void udocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_udocActionPerformed
        ShUpdate report = new ShUpdate();
        report.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_udocActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        ShReports report = new ShReports();
        report.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        txtDoctorId.setText("");
        txtDoctorName.setText("");
        txtEmail.setText("");
        txtRoomNo.setText("");
        txtAddress.setText("");
        txtValidPeriod.setDate(null);

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        MainUI nd = new MainUI();
        nd.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        MSVMainUI admin = new MSVMainUI();
        admin.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShDoctor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backg;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtDoctorId;
    private javax.swing.JTextField txtDoctorName;
    private javax.swing.JComboBox<String> txtDoctorSpecility;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtRoomNo;
    private com.toedter.calendar.JCalendar txtValidPeriod;
    private javax.swing.JButton udoc;
    // End of variables declaration//GEN-END:variables
}
